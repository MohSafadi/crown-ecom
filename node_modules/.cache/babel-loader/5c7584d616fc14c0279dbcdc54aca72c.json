{"ast":null,"code":"var _jsxFileName = \"/Users/mohsafadi/Desktop/WebDev Journey/React/crwn-clothing-v2/src/components/contexts/user.context.jsx\",\n  _s = $RefreshSig$();\nimport { createContext, useEffect, useState } from \"react\";\nimport { onAuthStateChangedListener } from \"../../utils/firebase/firebase.utils\";\n\n//this code is the context storage, it will initially take the default value, not the same as initial value.\n//should be seen as the actual value you want to access\n//we use null because its a falsey value and at some point we need to check if its truthy or falsy (empty string is truthy)\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const UserContext = /*#__PURE__*/createContext({\n  currentUser: null,\n  setCurrentUser: () => null\n});\n\n//any context that we build has a \"Provider\", the provider will be used to wrap around any component that we need to take value from \n// so we will use \"UserProvider\" to wrap the app component so we have access to the context storage everywhere in our app.\n\nexport const UserProvider = _ref => {\n  _s();\n  let {\n    children\n  } = _ref;\n  const [currentUser, setCurrentUser] = useState(null);\n  const value = {\n    currentUser,\n    setCurrentUser\n  };\n  useEffect(() => {\n    const unsubscribe = onAuthStateChangedListener(user => {\n      console.log(user);\n    });\n    return unsubscribe;\n  }, []);\n  return /*#__PURE__*/_jsxDEV(UserContext.Provider, {\n    value: value,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 12\n  }, this);\n};\n\n//the \"UserProvider\" will be used to wrap the \"App\" component.\n// UserContext will be used in sign in form to set the user after sign in, we can then use this value in Navigation component\n_s(UserProvider, \"Y5F2pQQk2LZA5WRO2+bvRm5iRuo=\");\n_c = UserProvider;\nvar _c;\n$RefreshReg$(_c, \"UserProvider\");","map":{"version":3,"names":["createContext","useEffect","useState","onAuthStateChangedListener","jsxDEV","_jsxDEV","UserContext","currentUser","setCurrentUser","UserProvider","_ref","_s","children","value","unsubscribe","user","console","log","Provider","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/mohsafadi/Desktop/WebDev Journey/React/crwn-clothing-v2/src/components/contexts/user.context.jsx"],"sourcesContent":["import { createContext, useEffect, useState } from \"react\";\nimport { onAuthStateChangedListener } from \"../../utils/firebase/firebase.utils\";\n\n\n//this code is the context storage, it will initially take the default value, not the same as initial value.\n//should be seen as the actual value you want to access\n//we use null because its a falsey value and at some point we need to check if its truthy or falsy (empty string is truthy)\nexport const UserContext = createContext({\n    currentUser: null,\n    setCurrentUser: () => null\n});\n\n//any context that we build has a \"Provider\", the provider will be used to wrap around any component that we need to take value from \n// so we will use \"UserProvider\" to wrap the app component so we have access to the context storage everywhere in our app.\n\nexport const UserProvider = ({ children }) => {\n    const [currentUser, setCurrentUser] = useState(null);\n    const value = { currentUser, setCurrentUser };\n\n    useEffect(() => {\n        const unsubscribe = onAuthStateChangedListener((user) => {\n            console.log(user);\n        });\n        return unsubscribe;\n    }, []);\n    return <UserContext.Provider value={value}>{children}</UserContext.Provider>\n}\n\n//the \"UserProvider\" will be used to wrap the \"App\" component.\n// UserContext will be used in sign in form to set the user after sign in, we can then use this value in Navigation component"],"mappings":";;AAAA,SAASA,aAAa,EAAEC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAC1D,SAASC,0BAA0B,QAAQ,qCAAqC;;AAGhF;AACA;AACA;AAAA,SAAAC,MAAA,IAAAC,OAAA;AACA,OAAO,MAAMC,WAAW,gBAAGN,aAAa,CAAC;EACrCO,WAAW,EAAE,IAAI;EACjBC,cAAc,EAAEA,CAAA,KAAM;AAC1B,CAAC,CAAC;;AAEF;AACA;;AAEA,OAAO,MAAMC,YAAY,GAAGC,IAAA,IAAkB;EAAAC,EAAA;EAAA,IAAjB;IAAEC;EAAS,CAAC,GAAAF,IAAA;EACrC,MAAM,CAACH,WAAW,EAAEC,cAAc,CAAC,GAAGN,QAAQ,CAAC,IAAI,CAAC;EACpD,MAAMW,KAAK,GAAG;IAAEN,WAAW;IAAEC;EAAe,CAAC;EAE7CP,SAAS,CAAC,MAAM;IACZ,MAAMa,WAAW,GAAGX,0BAA0B,CAAEY,IAAI,IAAK;MACrDC,OAAO,CAACC,GAAG,CAACF,IAAI,CAAC;IACrB,CAAC,CAAC;IACF,OAAOD,WAAW;EACtB,CAAC,EAAE,EAAE,CAAC;EACN,oBAAOT,OAAA,CAACC,WAAW,CAACY,QAAQ;IAACL,KAAK,EAAEA,KAAM;IAAAD,QAAA,EAAEA;EAAQ;IAAAO,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAuB,CAAC;AAChF,CAAC;;AAED;AACA;AAAAX,EAAA,CAdaF,YAAY;AAAAc,EAAA,GAAZd,YAAY;AAAA,IAAAc,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module"}